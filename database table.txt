CREATE DATABASE lhm_system2;
USE lhm_system2;

-- Create the `admins` table
CREATE TABLE `admins` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(100) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `role` ENUM('primary', 'secondary', 'viewonly') NOT NULL DEFAULT 'viewonly',
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `email` (`email`)
);

-- Create the `admin_actions` table
CREATE TABLE `admin_actions` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `admin_id` INT DEFAULT NULL,
  `action_description` TEXT NOT NULL,
  `action_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  KEY `admin_id` (`admin_id`),
  FOREIGN KEY (`admin_id`) REFERENCES `admins` (`id`) ON DELETE CASCADE
);

-- Create the `departments` table
CREATE TABLE `departments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dept_code` VARCHAR(50) DEFAULT NULL,
  `department_name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`)
);

-- Create the `semester` table
CREATE TABLE `semester` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `sem_num` INT NOT NULL,
  `sem_name` VARCHAR(64) NOT NULL,
  PRIMARY KEY (`id`)
);

-- Create the `lecture_halls` table
CREATE TABLE `lecture_halls` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `hall_name` VARCHAR(100) NOT NULL,
  `capacity` INT NOT NULL,
  `location` VARCHAR(255) NOT NULL,
  `available` TINYINT(1) DEFAULT '1',
  PRIMARY KEY (`id`)
);

-- Create the `batches` table
CREATE TABLE `batches` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `batch_year` VARCHAR(50) NOT NULL,
  `department_id` INT DEFAULT NULL,
  `semester_id` INT NOT NULL,
  `batch_name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`department_id`) REFERENCES `departments` (`id`) ON DELETE SET NULL,
  FOREIGN KEY (`semester_id`) REFERENCES `semester` (`id`) ON DELETE CASCADE
);

-- Create the `students` table
CREATE TABLE `students` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `index_number` VARCHAR(50) NOT NULL,
  `username` VARCHAR(100) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `mobile_num` VARCHAR(10) DEFAULT NULL,
  `address` VARCHAR(255) DEFAULT NULL,
  `department_id` INT NOT NULL,
  `batch_id` INT NOT NULL,
  `image_path` VARCHAR(255) DEFAULT NULL,
  `enrollment_date` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `index_number` (`index_number`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `email` (`email`),
  FOREIGN KEY (`department_id`) REFERENCES `departments` (`id`) ON DELETE CASCADE,
  FOREIGN KEY (`batch_id`) REFERENCES `batches` (`id`) ON DELETE CASCADE
);

-- Create the `subjects` table
CREATE TABLE `subjects` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `subject_number` VARCHAR(50) NOT NULL,
  `subject_name` VARCHAR(100) NOT NULL,
  `department_id` INT DEFAULT NULL,
  `semester_id` INT NOT NULL,
  `credits` INT NOT NULL,
  `about` TEXT,
  PRIMARY KEY (`id`),
  UNIQUE KEY `subject_number` (`subject_number`),
  FOREIGN KEY (`department_id`) REFERENCES `departments` (`id`) ON DELETE CASCADE,
  FOREIGN KEY (`semester_id`) REFERENCES `semester` (`id`) ON DELETE CASCADE
);

-- Create the `lecturers` table
CREATE TABLE `lecturers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `index_number` VARCHAR(45) DEFAULT NULL,
  `username` VARCHAR(100) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `expertise` VARCHAR(255) DEFAULT NULL,
  `address` VARCHAR(255) DEFAULT NULL,
  `mobile_no` VARCHAR(10) DEFAULT NULL,
  `role` ENUM('Visiting', 'Permanent') DEFAULT NULL,
  `image_path` VARCHAR(255) DEFAULT NULL,
  `created_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `email` (`email`)
);

-- Create the `lecturer_department` table
CREATE TABLE `lecturer_department` (
  `lecturer_id` INT NOT NULL,
  `department_id` INT NOT NULL,
  `semester_id` INT NOT NULL,
  PRIMARY KEY (`lecturer_id`, `department_id`, `semester_id`),
  FOREIGN KEY (`lecturer_id`) REFERENCES `lecturers` (`id`) ON DELETE CASCADE,
  FOREIGN KEY (`department_id`) REFERENCES `departments` (`id`) ON DELETE CASCADE,
  FOREIGN KEY (`semester_id`) REFERENCES `semester` (`id`) ON DELETE CASCADE
);

-- Create the `timeslot` table
CREATE TABLE `timeslot` (
  `slot_id` INT AUTO_INCREMENT PRIMARY KEY,
  `start_time` TIME NOT NULL,
  `end_time` TIME NOT NULL,
  `is_interval` BOOLEAN DEFAULT FALSE,
  UNIQUE (`start_time`, `end_time`)
);

-- Create the `lecture_schedule` table
CREATE TABLE `lecture_schedule` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `lecturer_id` INT DEFAULT NULL,
  `hall_id` INT DEFAULT NULL,
  `department_id` INT NOT NULL,
  `batch_id` INT NOT NULL,
  `subject_id` INT NOT NULL,
  `slot_id` INT DEFAULT NULL,
  `days` ENUM('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday') DEFAULT NULL,
  `schedule_date` DATE NULL,
  `status` ENUM('available', 'booked') DEFAULT 'available',
  PRIMARY KEY (`id`),
  FOREIGN KEY (`lecturer_id`) REFERENCES `lecturers` (`id`) ON DELETE CASCADE,
  FOREIGN KEY (`hall_id`) REFERENCES `lecture_halls` (`id`) ON DELETE CASCADE,
  FOREIGN KEY (`department_id`) REFERENCES `departments` (`id`) ON DELETE CASCADE,
  FOREIGN KEY (`batch_id`) REFERENCES `batches` (`id`) ON DELETE CASCADE,
  FOREIGN KEY (`slot_id`) REFERENCES `timeslot` (`slot_id`) ON DELETE CASCADE,
  FOREIGN KEY (`subject_id`) REFERENCES `subjects` (`id`) ON DELETE CASCADE
);
